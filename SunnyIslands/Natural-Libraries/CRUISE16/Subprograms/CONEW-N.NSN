* >Natural Source Header 000000
* :Mode S
* :CP
* <Natural Source Header
/** New Subprogram CRLIST-N.
/**
/** :author sagadmin
/* TODO Enter your code here
DEFINE DATA 
PARAMETER USING NCCOMM-P
PARAMETER USING NCCONW-P
*
LOCAL USING NCDATA-L
LOCAL
1 UP-INPUT-OK (L)
1 ID-CUSTOMER-IN-N (N8)
1 ID-CRUISE-IN-N (N8)
1 CHECK-DATE (A8)
1 REDEFINE CHECK-DATE
  2 CHECK-YEAR-N (N4)
  2 CHECK-MON-N  (A2)
  2 CHECK-DAY-N  (A2)
1 REDEFINE CHECK-DATE
  2 CHECK-DATE-N (N8)
*
1 LOCAL-DATE (A8)
1 LOCAL-AVAIL (N1)
1 LOCAL-NEWCONTRACTID (N10)

1 V-WORKREC (A80)
1 V-WORKFIELD (A16) 
1 V-SERVICENAME (A25) CONST<'New Contract'>
*
END-DEFINE
* ------------------------------------------------------------------
ON ERROR
  INCLUDE ERRLOG-I 'V-SERVICENAME'
   BACKOUT TRANSACTION
  ESCAPE ROUTINE
END-ERROR
* ------------------------------------------------------------------
MOVE ALL '-' TO V-WORKFIELD
* INCLUDE STALOG-I 'V-SERVICENAME'
MOVE P-LANG TO MSG-GROUP-PARA.MSG-LANG
* ------------------------------------------------------------------


IF #STUDENT THEN

  MOVE 9999 TO MSG-GROUP-PARA.MSG-NR

ELSE

  DECIDE FOR FIRST CONDITION
WHEN P-CONTRACT-DATA.ID-CUSTOMER-IN   = ' ' OR P-CONTRACT-DATA.ID-CUSTOMER-IN = '0' 
      MOVE 9904 TO MSG-GROUP-PARA.MSG-NR
WHEN P-CONTRACT-DATA.ID-CRUISE-IN     = ' ' OR P-CONTRACT-DATA.ID-CRUISE-IN = '0' 
      MOVE 9905 TO MSG-GROUP-PARA.MSG-NR
    WHEN NONE
      IF P-CONTRACT-DATA.ID-CRUISE-IN IS (N8)
        THEN
        COMPUTE ID-CRUISE-IN-N = VAL(P-CONTRACT-DATA.ID-CRUISE-IN)
      ELSE
        MOVE 9905 TO MSG-GROUP-PARA.MSG-NR
      END-IF
      IF P-CONTRACT-DATA.ID-CUSTOMER-IN IS (N8)
        THEN
        COMPUTE ID-CUSTOMER-IN-N = VAL(P-CONTRACT-DATA.ID-CUSTOMER-IN)
      ELSE
        MOVE 9904 TO MSG-GROUP-PARA.MSG-NR
      END-IF

      R1.
      FIND NCCRUISE WITH NCCRUISE.CRUISE-ID = ID-CRUISE-IN-N
        COMPUTE LOCAL-AVAIL = VAL(NCCRUISE.CRUISE-STATUS)


        IF LOCAL-AVAIL GT 0
          THEN      /*  there is still a cruise available


          LOCAL-AVAIL := LOCAL-AVAIL - 1
          NCCRUISE.CRUISE-STATUS := LOCAL-AVAIL
          UPDATE (R1.)


          READ (1) NCCONTRACT DESCENDING BY NCCONTRACT.CONTRACT-ID

            LOCAL-NEWCONTRACTID := NCCONTRACT.CONTRACT-ID +1
            RESET NCCONTRACT
            NCCONTRACT.CONTRACT-ID := LOCAL-NEWCONTRACTID
            MOVE NCCRUISE.PRICE-1W TO NCCONTRACT.PRICE

            MOVE *DATN  TO LOCAL-DATE
            COMPUTE NCCONTRACT.DATE-BOOKING = VAL(LOCAL-DATE)
            

            MOVE ID-CRUISE-IN-N TO NCCONTRACT.ID-CRUISE
            MOVE ID-CUSTOMER-IN-N TO NCCONTRACT.ID-CUSTOMER

            PERFORM HANDLE-INPUT-DATA

            IF MSG-GROUP-PARA.MSG-NR = 9800

              STORE NCCONTRACT
              END TRANSACTION
              MOVE NCCONTRACT.CONTRACT-ID TO P-NEW-CONTRACTID

            ELSE

              BACKOUT TRANSACTION
            END-IF
          END-READ

        ELSE
          MOVE 9902 TO MSG-GROUP-PARA.MSG-NR  /*  no longer available

        END-IF
      END-FIND
  END-DECIDE
END-IF

CALLNAT 'CAMSG-N' MSG-GROUP-PARA
COMPRESS MSG-GROUP-PARA.MSG-TYPE '-' MSG-GROUP-PARA.MSG-TEXT
  INTO P-RESPONSE.P-RSPTXT
MOVE MSG-GROUP-PARA.MSG-NR TO P-RESPONSE.P-RSPCODE



* ------------------------------------------------------------------
DEFINE SUBROUTINE HANDLE-INPUT-DATA

MOVE 9800 TO MSG-GROUP-PARA.MSG-NR

* here you can program parameter input checking

FIND NCCUSTOMER PERSON-ID = ID-CUSTOMER-IN-N
  IF NO RECORDS FOUND
    MOVE 9918 TO MSG-GROUP-PARA.MSG-NR
    ESCAPE ROUTINE
  END-NOREC
END-FIND
*
* MOVE 9800 TO MSG-GROUP-PARA.MSG-NR
* *
* DECIDE FOR EVERY CONDITION
* *
* *   WHEN WEEK-COUNT-IN NE '1' AND WEEK-COUNT-IN NE '2'
* *       AND  WEEK-COUNT-IN NE '3'
* *     MOVE 9915 TO MSG-GROUP-PARA.MSG-NR
* *     ESCAPE ROUTINE
* * *
*   WHEN NOT id-customer-in IS (N8)
*     MOVE 9919 TO MSG-GROUP-PARA.MSG-NR
*     ESCAPE ROUTINE
*   WHEN ID-CUSTOMER-IN IS (N8)

* 
* *
*   WHEN NOT ID-CRUISE-IN IS (N8)
*     MOVE 9917 TO MSG-GROUP-PARA.MSG-NR
*     ESCAPE ROUTINE
*   WHEN ID-CRUISE-IN IS (N8)
*     FIND NCCRUISE CRUISE-ID = ID-CRUISE-IN-N
*       IF NO RECORDS FOUND
*         MOVE 9916 TO MSG-GROUP-PARA.MSG-NR
*         ESCAPE ROUTINE
*       END-NOREC
* 
*     END-FIND
* *
*   WHEN DATE-RESERVATION-IN NE ' '
*     IF DATE-RESERVATION-IN NE MASK (YYYYMMDD)
*       MOVE 9914 TO MSG-GROUP-PARA.MSG-NR
*       ESCAPE ROUTINE
*     END-IF
*     MOVE DATE-RESERVATION-IN TO CHECK-DATE
*     IF CHECK-YEAR-N LT 2015 OR CHECK-YEAR-N GT 2020
*       MOVE 9913 TO MSG-GROUP-PARA.MSG-NR
*       ESCAPE ROUTINE
*     END-IF
*     MOVE CHECK-DATE-N TO NCCONTRACT.DATE-RESERVATION
* *
*   WHEN DATE-BOOKING-IN NE ' '
*     IF DATE-BOOKING-IN NE MASK (YYYYMMDD)
*       MOVE 9912 TO MSG-GROUP-PARA.MSG-NR
*       ESCAPE ROUTINE
*     END-IF
*     MOVE DATE-BOOKING-IN TO CHECK-DATE
*     IF CHECK-YEAR-N LT 2015 OR CHECK-YEAR-N GT 2020
*       MOVE 9911 TO MSG-GROUP-PARA.MSG-NR
*       ESCAPE ROUTINE
*     END-IF
*     MOVE CHECK-DATE-N TO NCCONTRACT.DATE-BOOKING
* *
*   WHEN WEEK-COUNT-IN NE  ' '
*     DECIDE ON FIRST VALUE OF WEEK-COUNT-IN
*       VALUE '1'
*         MOVE NCCRUISE.PRICE-1W TO NCCONTRACT.PRICE
*       VALUE '2'
*         MOVE NCCRUISE.PRICE-2W TO NCCONTRACT.PRICE
*       VALUE '3'
*         MOVE NCCRUISE.PRICE-3W TO NCCONTRACT.PRICE
*       NONE IGNORE
*     END-DECIDE
* *
*   WHEN NONE IGNORE
* END-DECIDE
*
END-SUBROUTINE
* ------------------------------------------------------------------
*
END
